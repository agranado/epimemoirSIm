subtree.list = subtrees(rec);x_mul(4,4);for(i in 1:length(subtree.list)){ plot.phyl(subtree.list[[i]], main =paste("depth =",toString(max(node.depth(subtree.list[[i]]))) )); }
source("cascadeFunctions.R")
plot.all.subtrees<-function(rec){
subtree.list = subtrees(rec);x_mul(4,4);
for(i in 1:length(subtree.list)){
plot.phyl(subtree.list[[i]], main =paste("depth =",toString(max(node.depth(subtree.list[[i]]))) ));
}
}
source("cascadeFunctions.R")
plot.all.subtrees(rec)
plot.all.subtrees(a.phylo)
rec$edge
dim(rec$edge,1)
dim(rec$edge)[[1]]
dim(rec$edge)[1]
source("cascadeFunctions.R")
plot.all.subtrees(rec)
source("cascadeFunctions.R")
plot.all.subtrees(rec)
rec
extract.main.clades
extract.main.clades(rec)[[1]]
extract.main.clades(rec)[[2]]
extract.main.clades(rec)[[1]]$tip.label
clade.probability(extract.main.clades(rec)[[1]]$tip.label,3,0.3,1/2)
clade.probability(extract.main.clades(rec)[[1]]$tip.label,3,0.1,1/2)
source("cascadeFunctions.R")
clade.probability(extract.main.clades(rec)[[1]]$tip.label,3,0.1,1/2)
clade.probability(extract.main.clades(rec)[[1]]$tip.label,3,0.3,1/2)
clade.probability(extract.main.clades(rec)[[1]]$tip.label,3,0.4,1/2)
clade.probability(extract.main.clades(rec)[[1]]$tip.label,3,0.5,1/2)
log(clade.probability(extract.main.clades(rec)[[1]]$tip.label,3,0.5,1/2))
clade.probability(extract.main.clades(rec)[[1]]$tip.label,3,0.5,1/2)
mu.scan=c(0.01,0.05,0.1,0.15,0.20,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6)
prs=c()
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(extract.main.clades(rec)[[1]]$tip.label,3,mu.scan[m],1/2)))
prs
plot(mu.scan,prs)
x11();plot(mu.scan,prs)
mu.scan[which(max(prs))]
max(prs)
find(prs,max)
find(max,prs)
which.is.max(prs)
subtrees(rec)
subtrees(rec)[[15]]
small.one = subtrees(rec)[[15]]
small.one
small.one$edge
small.one$Nnode
#for a given clade, we can calculate the Pr of the whole clade for a given mu value
mu.scan=c(0.01,0.05,0.1,0.15,0.20,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6)
prs=c()
x_mul(1,2)
for(1 in 1:2){
this.clade=extract.main.clades(rec)[[t]]
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(this.clade$tip.label,3,mu.scan[m],1/2)))
plot(mu.scan,prs)
}
#for a given clade, we can calculate the Pr of the whole clade for a given mu value
mu.scan=c(0.01,0.05,0.1,0.15,0.20,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6)
prs=c()
x_mul(1,2)
for(1 in 1:2){
this.clade=extract.main.clades(rec)[[t]]
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(this.clade$tip.label,3,mu.scan[m],1/2)))
plot(mu.scan,prs)
}
t
t
t=1
t
mu.scan=c(0.01,0.05,0.1,0.15,0.20,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6)
prs=c()
x_mul(1,2)
for(t in 1:2){
this.clade=extract.main.clades(rec)[[t]]
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(this.clade$tip.label,3,mu.scan[m],1/2)))
plot(mu.scan,prs)
}
tmu.scan=c(0.01,0.05,0.1,0.15,0.20,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6)
prs=c()
x_mul(1,2)
for(t in 1:2){
this.clade=extract.main.clades(rec)[[t]]
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(this.clade$tip.label,3,mu.scan[m],1/2)))
plot(mu.scan,prs)
t
t
;
';'
'''
)
}
}
t
extract.main.clades(rec)
extract.main.clades(rec)[[1]]
extract.main.clades(rec)[[2]]
this.clade
mu.scan=c(0.01,0.05,0.1,0.15,0.20,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6)
prs=c()
x_mul(1,2)
for(t in 1:2){
this.clade=extract.main.clades(rec)[[t]]
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(this.clade$tip.label,3,mu.scan[m],1/2)))
plot(mu.scan,prs)
}
Fr
mu.scan=c(0.01,0.05,0.1,0.15,0.20,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6)
prs=c()
x_mul(1,2)
for(t in 1:2){
this.clade=extract.main.clades(rec)[[t]]
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(this.clade$tip.label,3,mu.scan[m],1/2)))
plot(mu.scan,prs,ylim=c(-750,-250))
}
mu.scan=c(0.01,0.05,0.1,0.15,0.20,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6)
prs=c()
x_mul(1,2)
for(t in 1:2){
this.clade=extract.main.clades(rec)[[t]]
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(this.clade$tip.label,3,mu.scan[m],1/2)))
plot(mu.scan,prs,ylim=c(-750,-250))
}
mu.scan=c(0.01,0.05,0.1,0.15,0.20,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6)
prs=c()
x_mul(1,2)
for(t in 1:2){
this.clade=extract.main.clades(rec)[[t]]
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(this.clade$tip.label,3,mu.scan[m],1/2)))
plot(mu.scan,prs,ylim=c(-750,-250))
}
source("cascadeFunctions.R")
source("cascadeFunctions.R")
leaves.barcode
source("cascadeFunctions.R")
leaves.barcode
source("cascadeFunctions.R")
mu.scan=c(0.01,0.05,0.1,0.15,0.20,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6)
prs=c()
x_mul(1,2)
for(t in 1:2){
this.clade=extract.main.clades(rec)[[t]]
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(this.clade$tip.label,nGen=4,genON=1,mu1=0.3,mu2=mu.scan[m],1/2)))
plot(mu.scan,prs,ylim=c(-750,-250))
}
source("cascadeFunctions.R")
mu.scan=c(0.01,0.05,0.1,0.15,0.20,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6)
prs=c()
x_mul(1,2)
for(t in 1:2){
this.clade=extract.main.clades(rec)[[t]]
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(this.clade$tip.label,nGen=4,genON=1,mu1=0.3,mu2=mu.scan[m],1/2)))
plot(mu.scan,prs,ylim=c(-750,-250))
}
source("cascadeFunctions.R")
mu.scan=c(0.01,0.05,0.1,0.15,0.20,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6)
prs=c()
x_mul(1,2)
for(t in 1:2){
this.clade=extract.main.clades(rec)[[t]]
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(this.clade$tip.label,nGen=4,genON=1,mu1=0.3,mu2=mu.scan[m],1/2)))
plot(mu.scan,prs,ylim=c(-750,-250))
}
this.clade
this.clade$tip.label
mixed.model
mu.scan=c(0.01,0.05,0.1,0.15,0.20,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6)
prs=c()
x_mul(1,2)
for(t in 1:2){
this.clade=extract.main.clades(rec)[[t]]
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(this.clade$tip.label,nGen=4,genON=1,mu1=0.3,mu2=mu.scan[m],1/2)))
plot(mu.scan,prs,ylim=c(-750,-250))
}
source("cascadeFunctions.R")
mu.scan=c(0.01,0.05,0.1,0.15,0.20,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6)
prs=c()
x_mul(1,2)
for(t in 1:2){
this.clade=extract.main.clades(rec)[[t]]
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(this.clade$tip.label,nGen=4,genON=1,mu1=0.3,mu2=mu.scan[m],1/2)))
plot(mu.scan,prs,ylim=c(-750,-250))
}
mu.scan=c(0.01,0.05,0.1,0.15,0.20,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6)
prs=c()
x_mul(1,2)
for(t in 1:2){
this.clade=extract.main.clades(rec)[[t]]
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(this.clade$tip.label,nGen=4,genON=1,mu1=0.3,mu2=mu.scan[m],1/2)))
plot(mu.scan,prs,ylim=c(-750,-250))
}
mu.scan=c(0.01,0.05,0.1,0.15,0.20,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6)
prs=c()
x_mul(1,2)
for(t in 1:2){
this.clade=extract.main.clades(rec)[[t]]
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(this.clade$tip.label,nGen=4,genON=1,mu1=0.3,mu2=mu.scan[m],1/2)))
plot(mu.scan,prs,ylim=c(-750,-50))
}
mu.scan=c(0.01,0.05,0.1,0.15,0.20,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6)
prs=c()
x_mul(1,2)
for(t in 1:2){
this.clade=extract.main.clades(rec)[[t]]
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(this.clade$tip.label,nGen=4,genON=1,mu1=0.3,mu2=mu.scan[m],1/2)))
plot(mu.scan,prs,ylim=c(-750,-50))
}
mu.scan=c(0.01,0.05,0.1,0.15,0.20,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6)
prs=c()
x_mul(1,2)
for(t in 1:2){
this.clade=extract.main.clades(rec)[[t]]
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(this.clade$tip.label,nGen=4,genON=1,mu1=0.3,mu2=mu.scan[m],1/2)))
plot(mu.scan,prs,ylim=c(-350,-50))
}
mu.scan=c(0.01,0.05,0.1,0.15,0.20,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.9,0.95)
prs=c()
x_mul(1,2)
for(t in 1:2){
this.clade=extract.main.clades(rec)[[t]]
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(this.clade$tip.label,nGen=4,genON=1,mu1=0.3,mu2=mu.scan[m],1/2)))
plot(mu.scan,prs,ylim=c(-350,-50))
}
source("cascadeFunctions.R")
#Dec 10th
#plot posterior Pr(x | mu for different mu's)
#for a given clade, we can calculate the Pr of the whole clade for a given mu value
mu.scan=c(0.01,0.05,0.1,0.15,0.20,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.9,0.95)
prs=c()
x_mul(1,2)
for(t in 1:2){
this.clade=extract.main.clades(rec)[[t]]
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(this.clade$tip.label,nGen=4,genON=1,mu1=0.3,mu2=mu.scan[m],1/2)))
plot(mu.scan,prs,ylim=c(-350,-50))
}
x_mul(1,2)
for(t in 1:2){
this.clade=extract.main.clades(rec)[[t]]
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(this.clade$tip.label,nGen=4,genON=1,mu1=0.3,mu2=mu.scan[m],1/2)))
plot(mu.scan,prs,ylim=c(-350,-50),type="lo")
}
#plot posterior Pr(x | mu for different mu's)
#for a given clade, we can calculate the Pr of the whole clade for a given mu value
mu.scan=c(0.01,0.05,0.1,0.15,0.20,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.9,0.95)
prs=c()
x_mul(1,2)
for(t in 1:2){
this.clade=extract.main.clades(rec)[[t]]
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(this.clade$tip.label,nGen=4,genON=1,mu1=0.3,mu2=mu.scan[m],1/2)))
plot(mu.scan,prs,ylim=c(-350,-50),type="o")
}
install.packages("IRkernel")
IRkernel::installspec()
x_mul(1,3);plot.phyl(rec);plot.phyl(aa);plot.phyl(aa2)
rec
extract.main.clades(tree)[[1]]
extract.main.clades(rec)[[1]]
x_mul(1,3);plot.phyl(rec);plot.phyl(extract.main.clades(rec)[[2]]),plot.phyl(extract.main.clades(rec)[[1]])
x_mul(1,3);plot.phyl(rec);plot.phyl(extract.main.clades(rec)[[2]]);plot.phyl(extract.main.clades(rec)[[1]])
source("cascadeFunctions.R")
x_mul(1,3);plot.phyl(rec);plot.phyl(extract.main.clades(rec)[[2]]);plot.phyl(extract.main.clades(rec)[[1]])
cex=2;x_mul(1,3);plot.phyl(rec,cex=cex);plot.phyl(extract.main.clades(rec)[[2]],cex=cex);plot.phyl(extract.main.clades(rec)[[1]],cex=cex)
cex=2.5;x_mul(1,3);plot.phyl(rec,cex=cex);plot.phyl(extract.main.clades(rec)[[2]],cex=cex);plot.phyl(extract.main.clades(rec)[[1]],cex=cex)
x11();plot.phylo(rec,edge.width = 3)
source("cascadeFunctions.R")
cex=2.5;x_mul(1,3);plot.phyl(rec,cex=cex);plot.phyl(extract.main.clades(rec)[[2]],cex=cex);plot.phyl(extract.main.clades(rec)[[1]],cex=cex)
source("cascadeFunctions.R")
cex=2.5;x_mul(1,3);plot.phyl(rec,cex=cex);plot.phyl(extract.main.clades(rec)[[2]],cex=cex);plot.phyl(extract.main.clades(rec)[[1]],cex=cex)
getwd()
list.files()
pdf("three_trees.pdf")
cex=2.5;x_mul(1,3);plot.phyl(rec,cex=cex);plot.phyl(extract.main.clades(rec)[[2]],cex=cex);plot.phyl(extract.main.clades(rec)[[1]],cex=cex)
cex=2.5;;plot.phyl(rec,cex=cex);plot.phyl(extract.main.clades(rec)[[2]],cex=cex);plot.phyl(extract.main.clades(rec)[[1]],cex=cex)
dev.off()
dev.off()
dev.off()
dev.off()
pdf("three_trees.pdf")
cex=2.5;par(mfrow=c(1,3));plot.phyl(rec,cex=cex);plot.phyl(extract.main.clades(rec)[[2]],cex=cex);plot.phyl(extract.main.clades(rec)[[1]],cex=cex)
dev.off()
cex=2.5;x_mul(1,3);plot.phyl(rec,cex=cex);plot.phyl(extract.main.clades(rec)[[2]],cex=cex);plot.phyl(extract.main.clades(rec)[[1]],cex=cex)
v
mu.scan=c(0.01,0.05,0.1,0.15,0.20,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.9,0.95)
prs=c()
x_mul(1,2)
for(t in 1:2){
this.clade=extract.main.clades(rec)[[t]]
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(this.clade$tip.label,nGen=4,genON=1,mu1=0.3,mu2=mu.scan[m],1/2)))
plot(mu.scan,prs,ylim=c(-400,-100),type="o")
}
mu.scan=c(0.01,0.05,0.1,0.15,0.20,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.9,0.95)
prs=c()
x_mul(1,2)
for(t in 1:2){
this.clade=extract.main.clades(rec)[[t]]
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(this.clade$tip.label,nGen=4,genON=1,mu1=0.3,mu2=mu.scan[m],1/2)))
plot(mu.scan,prs,ylim=c(-400,-200),type="o")
}
prs=c()
x_mul(1,2)
for(t in 1:2){
this.clade=extract.main.clades(rec)[[t]]
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(this.clade$tip.label,nGen=4,genON=1,mu1=0.3,mu2=mu.scan[m],1/2)))
plot(mu.scan,prs,ylim=c(-400,-200),type="o",lwd=2,ylab="log Pr", xlab="predited edit rate in clade")
}
x_mul(2,2)
for(t in 1:2){
this.clade=extract.main.clades(rec)[[t]]
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(this.clade$tip.label,nGen=4,genON=1,mu1=0.3,mu2=mu.scan[m],1/2)))
plot(mu.scan,prs,ylim=c(-400,-200),type="o",lwd=2,ylab="log Pr", xlab="predited edit rate in clade")
}
list.filest()
list.filest()
getwd()
pdf("plots/meeting_11Dec/Pr_two_clades_tree1.pdf")
x_mul(2,2)
for(t in 1:2){
this.clade=extract.main.clades(rec)[[t]]
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(this.clade$tip.label,nGen=4,genON=1,mu1=0.3,mu2=mu.scan[m],1/2)))
plot(mu.scan,prs,ylim=c(-400,-200),type="o",lwd=2,ylab="log Pr", xlab="predited edit rate in clade")
}
dev.off(0)
dev.off()
\
dev.off()
pdf("plots/meeting_11Dec/Pr_two_clades_tree1.pdf")
par(mfrow=c(2,2))
for(t in 1:2){
this.clade=extract.main.clades(rec)[[t]]
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(this.clade$tip.label,nGen=4,genON=1,mu1=0.3,mu2=mu.scan[m],1/2)))
plot(mu.scan,prs,ylim=c(-400,-200),type="o",lwd=2,ylab="log Pr", xlab="predited edit rate in clade")
}
dev.off()
ls()
leaves.barcode
leaves.history
rec$tip.label
rec.history = rec
rec.history$tip.label leaves.history
rec.history$tip.label leaves.history
rec.history$tip.label =  leaves.history
x11();plot.phyl(rec.history)
save.image()
dim(dynamicHistories)
length(dynamicHistories)
length(dynamicHistories[[1]])
closed.vals
switching.prs
closed.vals[4]
switching.prs[3]
dynHistories_4_3=switching.prs[3]
length(dynHistories_4_3)
dynHistories_4_3[[1]]
dynHistories_4_3
dynHistories_4_3=dynamicHistories[[4]][[3]]
length(dynHistories_4_3)
dynHistories_4_3
dynHistories_4_3[[1]]
convert.epihistory(dynHistories_4_3,4)
dynHistories_4_3[[2]]
dynHistories_4_3[[3]]
dynHistories_4_3[[4]]
dynHistories_4_3[[3]]
convert.epihistory<-function(epihistory_4_3_, nGen){
#creates a list of data.tree Node objects
a=lapply(epihistory_4_3_,FromDataFrameTable)
i= 1
epihistory=a[[i]]$Get("epihistory")
barcodes = a[[i]]$Get("barcode")
leavesID<-(length(epihistory)-2^nGen+1):length(epihistory)
nodesID <-1:(length(epihistory)-2^nGen)
leaves.history =epihistory[which(names(epihistory) %in% leavesID)]
leaves.barcode =barcodes[which(names(barcodes) %in% leavesID)]
nodes.history = epihistory[ which(names(epihistory) %in% nodesID  ) ]
nodes.barcode = barcodes[ which(names(barcodes) %in% nodesID  ) ]
#epigenetic tree
b.phylo = as.phylo.Node(a[[i]])
b.phylo$tip.label = leaves.history
b.phylo$node.label = nodes.history
plot.phyl(b.phylo,show.node.label=T)
}
dynHistories_4_3[[3]]
example.closed = dynHistories_4_3[[3]]
convert.epihistory(dynHistories_4_3,nGen=4,i=3)
convert.epihistory<-function(epihistory_4_3_, nGen,i){
#creates a list of data.tree Node objects
a=lapply(epihistory_4_3_,FromDataFrameTable)
epihistory=a[[i]]$Get("epihistory")
barcodes = a[[i]]$Get("barcode")
leavesID<-(length(epihistory)-2^nGen+1):length(epihistory)
nodesID <-1:(length(epihistory)-2^nGen)
leaves.history =epihistory[which(names(epihistory) %in% leavesID)]
leaves.barcode =barcodes[which(names(barcodes) %in% leavesID)]
nodes.history = epihistory[ which(names(epihistory) %in% nodesID  ) ]
nodes.barcode = barcodes[ which(names(barcodes) %in% nodesID  ) ]
#epigenetic tree
b.phylo = as.phylo.Node(a[[i]])
b.phylo$tip.label = leaves.history
b.phylo$node.label = nodes.history
plot.phyl(b.phylo,show.node.label=T)
}
convert.epihistory(dynHistories_4_3,nGen=4,i=3)
convert.epihistory<-function(epihistory_4_3_, nGen,i){
#creates a list of data.tree Node objects
a=lapply(epihistory_4_3_,FromDataFrameTable)
epihistory=a[[i]]$Get("epihistory")
barcodes = a[[i]]$Get("barcode")
leavesID<-(length(epihistory)-2^nGen+1):length(epihistory)
nodesID <-1:(length(epihistory)-2^nGen)
leaves.history =epihistory[which(names(epihistory) %in% leavesID)]
leaves.barcode =barcodes[which(names(barcodes) %in% leavesID)]
nodes.history = epihistory[ which(names(epihistory) %in% nodesID  ) ]
nodes.barcode = barcodes[ which(names(barcodes) %in% nodesID  ) ]
#epigenetic tree
b.phylo = as.phylo.Node(a[[i]])
b.phylo$tip.label = leaves.history
b.phylo$node.label = nodes.history
plot.phyl(b.phylo,show.nodes=T)
}
convert.epihistory(dynHistories_4_3,nGen=4,i=3)
convert.epihistory<-function(epihistory_4_3_, nGen,i){
#creates a list of data.tree Node objects
a=lapply(epihistory_4_3_,FromDataFrameTable)
epihistory=a[[i]]$Get("epihistory")
barcodes = a[[i]]$Get("barcode")
leavesID<-(length(epihistory)-2^nGen+1):length(epihistory)
nodesID <-1:(length(epihistory)-2^nGen)
leaves.history =epihistory[which(names(epihistory) %in% leavesID)]
leaves.barcode =barcodes[which(names(barcodes) %in% leavesID)]
nodes.history = epihistory[ which(names(epihistory) %in% nodesID  ) ]
nodes.barcode = barcodes[ which(names(barcodes) %in% nodesID  ) ]
#epigenetic tree
b.phylo = as.phylo.Node(a[[i]])
b.phylo$tip.label = leaves.history
b.phylo$node.label = nodes.history
plot.phyl(b.phylo,show.nodes=T)
return(b.phylo)
}
convert.epihistory(dynHistories_4_3,nGen=4,i=3)
x11();convert.epihistory(dynHistories_4_3,nGen=4,i=3)
clade.edit.rate<-function(rec){
mu.scan=c(0.01,0.05,0.1,0.15,0.20,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.9,0.95)
prs=c()
x_mul(2,2)
for(t in 1:2){
this.clade=extract.main.clades(rec)[[t]]
for(m in 1:length(mu.scan))
prs[m]=sum(log(clade.probability(this.clade$tip.label,nGen=4,genON=1,mu1=0.3,mu2=mu.scan[m],1/2)))
plot(mu.scan,prs,ylim=c(-400,-200),type="o",lwd=2,ylab="log Pr", xlab="predited edit rate in clade")
}
}
clade.edit.rate(rec =rec)
as.phylo(example.closed)
convert.epihistory<-function(epihistory_4_3_, nGen,i){
#creates a list of data.tree Node objects
a=lapply(epihistory_4_3_,FromDataFrameTable)
epihistory=a[[i]]$Get("epihistory")
barcodes = a[[i]]$Get("barcode")
leavesID<-(length(epihistory)-2^nGen+1):length(epihistory)
nodesID <-1:(length(epihistory)-2^nGen)
leaves.history =epihistory[which(names(epihistory) %in% leavesID)]
leaves.barcode =barcodes[which(names(barcodes) %in% leavesID)]
nodes.history = epihistory[ which(names(epihistory) %in% nodesID  ) ]
nodes.barcode = barcodes[ which(names(barcodes) %in% nodesID  ) ]
#epigenetic tree
b.phylo = as.phylo.Node(a[[i]])
a.phylo = as.phylo.Node(a[[i]])
b.phylo$tip.label = leaves.history
b.phylo$node.label = nodes.history
a.phylo$tip.label = leaves.barcode
a.phylo$node.label= nodes.barcode
#plot.phyl(b.phylo,show.nodes=T)
return(list(a.phylo,b.phylo))
}
a=convert.epihistory(dynHistories_4_3,nGen=4,i=3)
a[[1]]
a[[2]]
rec2.barcode = a[[1]]
rec2.history = a[[2]]
clade.edit.rate(rec=rec2)
clade.edit.rate(rec=rec2.barcode)
savehistory(file = "history.Rhistory")
